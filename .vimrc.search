" CtrlSF - searches via ack / ag / pt / rg and shows an editable buffer
" with search results.
"   :CtrlSF term
" It is possible to edit the results (no inserts), save with :w,
" undo with `u` and `p` to open file preview.
" M - collapses results into a list.
" Ctrl-j / Ctrl-k - move between results.
"
" Ignore directory when searching:
"   :CtrlSF -ignoredir 'assets' mysearch
" Or
"   :let g:ctrlsf_ignore_dir=['dir1', 'dir2']
"   :CtrlSF mysearch
Plug 'dyng/ctrlsf.vim'
let g:ctrlsf_auto_close = 0

nnoremap <Leader>cf :tabnew<CR>:CtrlSF
" Similar to CtrlSF:
"   vim-swoop - find/replace occurences in open buffers
"   Plug 'pelodelfuego/vim-swoop'
"
"   EnMasse - editable quickfix list.
"   Plug 'Wolfy87/vim-enmasse'
"   Simlar: https://github.com/thinca/vim-qfreplace
"
"   Related: ferret - search with :Ack, put results to quickfix / location list
"   or put files from quickfix to `args` with :Qargs (and then use :argdo)
"   Plug 'wincent/ferret'
"   Related: 'nelstrom/vim-qargs'
"   Related: QFdo from Vimple (below)

" rainbow parenthesis
" Note: doesn't work for php due some specifics in the syntax file
" it doesn't work with default syntax file and with extended versions
" (https://github.com/vim-scripts/php.vim--Garvin) and (https://github.com/StanAngeloff/php.vim)
" maybe this can be fixed?
" see https://defuse.ca/blog/vim-rainbow-parentheses-work-in-php
" Plug 'kien/rainbow_parentheses.vim'
" augroup Rainbow
"   autocmd!
"   autocmd VimEnter * RainbowParenthesesToggle
"   autocmd Syntax * RainbowParenthesesLoadRound
"   autocmd Syntax * RainbowParenthesesLoadSquare
"   autocmd Syntax * RainbowParenthesesLoadBraces
" augroup END

" Add abbreviations for all combinations
" :Abolish {despa,sepe}rat{e,es,ed,ing,ely,ion,ions,or}  {despe,sepa}rat{}
" Replace combinations + smart case (Facility -> Building, facilities -> buildings)
" :%Subvert/facilit{y,ies}/building{,s}/g
" Coercion: crs - coerce to snake case, crm - mixed case, crc - camel, cru - upper fooBar (crs)-> foo_bar
" See also: http://www.reddit.com/r/vim/comments/1weenn/oh_thats_why_abolish_is_useful_subvert/
Plug 'tpope/vim-abolish'

" Different highlight for current search result
" Add `\v` when start search to enable very magic mode
" Overrides search params (history=1000, hlsearch enabled, incsearch,
" ignorecase, shortmess, smartcase)
Plug 'wincent/loupe'

" Search {{{

  " Visual search
  " select text and hit * / # to find it
  " http://got-ravings.blogspot.com/2008/07/vim-pr0n-visual-search-mappings.html
  " https://github.com/godlygeek/vim-files/blob/master/plugin/vsearch.vim
  " Visual mode search
  function! s:VSetSearch()
    let temp = @@
    norm! gvy
    let @/ = '\V' . substitute(escape(@@, '\'), '\n', '\\n', 'g')
    " Use this line instead of the above to match matches spanning across lines
    "let @/ = '\V' . substitute(escape(@@, '\'), '\_s\+', '\\_s\\+', 'g')
    call histadd('/', substitute(@/, '[?/]', '\="\\%d".char2nr(submatch(0))', 'g'))
    let @@ = temp
  endfunction
  " xnoremap - only for visual mode, but not for select mode
  xnoremap * :<C-u>call <SID>VSetSearch()<CR>/<CR>
  xnoremap # :<C-u>call <SID>VSetSearch()<CR>?<CR>

  " If ag is available use it as filename list generator instead of 'find'
  if executable("ag")
      " --vimgrep is available from version  0.25.0+
      if split(system("ag --version"), "[ \n\r\t]")[2] =~ '\d\+.[2-9][5-9]\(.\d\+\)\?'
        set grepprg=ag\ --vimgrep\ --ignore-case
      else
        " --noheading seems odd here, but see https://github.com/ggreer/the_silver_searcher/issues/361
        set grepprg=ag\ --column\ --nogroup\ --noheading\ --ignore-case
      endif
      set grepformat=%f:%l:%c:%m,%f:%l:%m
      command! -nargs=+ -complete=file_in_path -bar Grep silent! grep! <args> | copen | let@/=split('<args>')[-1]
      " redraw!
  endif

" }}}
