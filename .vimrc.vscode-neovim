" NeoVim config for vscode-neovim plugin
" https://github.com/asvetliakov/vscode-neovim

set nocompatible " explicitly get out of vi-compatible mode

"let mapleader = "\<space>"
map <space> <leader>

" vim-commentary replacement
xmap gc  <Plug>VSCodeCommentary
nmap gc  <Plug>VSCodeCommentary
omap gc  <Plug>VSCodeCommentary
nmap gcc <Plug>VSCodeCommentaryLine

" Note: it should be possible to use plugins too, see, for example:
" https://www.reddit.com/r/vim/comments/zy0nk1/comment/j4uzo93/
" set rtp+=~/.vim/bundle/Vundle.vim
" call vundle#begin()
" Plugin 'VundleVim/Vundle.vim'
" Plugin 'https://github.com/kana/vim-smartword.git'
" Plugin 'https://github.com/bkad/CamelCaseMotion.git'
" call vundle#end()

" try
"   runtime bundle/vim-smartword/plugin/smartword.vim
"   map w  <Plug>(smartword-w)
"   map b  <Plug>(smartword-b)
"   map e  <Plug>(smartword-e)

"   map <Plug>(smartword-basic-w)  <Plug>CamelCaseMotion_w
"   map <Plug>(smartword-basic-b)  <Plug>CamelCaseMotion_b
"   map <Plug>(smartword-basic-e)  <Plug>CamelCaseMotion_e
" catch
" endtry
"
" This sets up vim-smartword and CamelCaseMotion plugins similar
" to what we have in main .vimrc file.

" https://code.visualstudio.com/docs/getstarted/keybindings

" Note: window shortcuts is work in progress,
" at the moment C-l, C-h splits down (should create split right)
" and C-j, C-k splits right.
" Besides, the split is always created, even when not needed.

function! WinCmd(key)
  if (a:key == 'h')
    call VSCodeNotify('workbench.action.navigateLeft')
  elseif (a:key == 'j')
    call VSCodeNotify('workbench.action.navigateDown')
  elseif (a:key == 'k')
    call VSCodeNotify('workbench.action.navigateUp')
  elseif (a:key == 'l')
    call VSCodeNotify('workbench.action.navigateRight')
  endif
endfunction

function! WinMove(key) range
  let t:curwin = winnr()
  call WinCmd(a:key)
  if (t:curwin == winnr()) "we havent moved
    if (match(a:key,'[jk]')) "were we going up/down
      call VSCodeNotify('workbench.action.splitEditorDown')
    else
      call VSCodeNotify('workbench.action.splitEditorRight')
    endif
    call WinCmd(a:key)
  endif
endfunction

" move to and open if not exists
map <c-j> :call WinMove('j')<CR>
map <c-k> :call WinMove('k')<CR>
map <c-l> :call WinMove('l')<CR>
map <c-h> :call WinMove('h')<CR>

"move windows
" moves to left tab
" map <Leader>h     <Cmd>call VSCodeNotify('workbench.action.moveEditorToLeftGroup')<CR>
map <Leader>h     <Cmd>call VSCodeNotify('workbench.action.moveEditorLeftInGroup')<CR>
map <Leader>k     <Cmd>call VSCodeNotify('workbench.action.positionPanelUp')<CR>
map <Leader>l     <Cmd>call VSCodeNotify('workbench.action.positionPanelRight')<CR> 
map <Leader>j     <Cmd>call VSCodeNotify('workbench.action.positionPanelBottom')<CR>
